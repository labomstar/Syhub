{% doc %}
  Renders a group of blocks with configurable layout direction, gap and
  alignment.

  All settings apply to only one dimension to reduce configuration complexity.

  This component is a wrapper concerned only with rendering its children in
  the specified layout direction with appropriate padding and alignment.

  @example
  {% content_for 'block', type: 'group', id: 'group' %}
{% enddoc %}

<div
  class="group {{ block.settings.layout_direction }} px-{{ block.settings.paddingx }} py-{{ block.settings.paddingy }}"
  style="
    --paddingx : {{ block.settings.paddingx }}px;
    --paddingy : {{ block.settings.paddingy }}px;
    --block-position: {{ block.settings.position }};
    --top-space: {{ block.settings.top_space }}px;
    --alignment: {{ block.settings.alignment }};
  "
  {{ block.shopify_attributes }}
>
  {% content_for 'blocks' %}
</div>

{% stylesheet %}
  .group {
    display: flex;
    flex-wrap: nowrap;
    /* overflow: hidden; */
    width: 100% important;
  }

  .group--horizontal {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    position: var(--block-position);
    top: var(--top-space);
    padding: var(--paddingy) var(--paddingx);
    max-width: 100%;
  }

  .group--vertical {
    flex-direction: column;
    align-items: var(--alignment);
    padding: var(--paddingy) var(--paddingx);
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.group",
  "class": "w-full",
  "blocks": [{ "type": "@theme" }],
  "settings": [
    {
      "type": "select",
      "id": "layout_direction",
      "label": "t:labels.layout_direction",
      "default": "group--vertical",
      "options": [
        { "value": "group--horizontal", "label": "t:options.direction.horizontal" },
        { "value": "group--vertical", "label": "t:options.direction.vertical" }
      ]
    },
    {
      "visible_if": "{{ block.settings.layout_direction == 'group--vertical' }}",
      "type": "select",
      "id": "alignment",
      "label": "t:labels.alignment",
      "default": "flex-start",
      "options": [
        { "value": "flex-start", "label": "t:options.alignment.left" },
        { "value": "center", "label": "t:options.alignment.center" },
        { "value": "flex-end", "label": "t:options.alignment.right" }
      ]
    },
    {
      "visible_if": "{{ block.settings.layout_direction == 'group--horizontal' }}",
      "type": "select",
      "id": "position",
      "label": "t:labels.position",
      "default": "flex-start",
      "options": [
        { "value": "fixed", "label": "t:options.alignment.fixed" },
        { "value": "sticky", "label": "t:options.alignment.sticky" },
        { "value": "none", "label": "t:options.alignment.none" }
      ]
    },
    {
      "visible_if": "{{ block.settings.layout_direction == 'group--horizontal' }}",
      "type": "range",
      "id": "top_space",
      "label": "t:labels.top_space",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "paddingx",
      "label": "t:labels.paddingx",
      "default": 0,
      "min": 0,
      "max": 18,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "paddingy",
      "label": "t:labels.paddingy",
      "default": 0,
      "min": 0,
      "max": 18,
      "step": 1,
      "unit": "px"
    }
  ],
  "presets": [
    {
      "name": "t:general.column",
      "category": "t:general.layout",
      "settings": {
        "layout_direction": "group--vertical",
        "alignment": "flex-start",
        "paddingx": 0,
        "paddingy": 0
      }
    },
    {
      "name": "t:general.row",
      "category": "t:general.layout",
      "settings": {
        "layout_direction": "group--horizontal",
        "paddingy": 0,
        "paddingx": 0
      }
    }
  ]
}
{% endschema %}
