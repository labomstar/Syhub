{% assign border_class = '' %}

{% if section.settings.menu_border %}
  {% assign border_class = 'border-b' %}

  {% case section.settings.menu_border_width %}
    {% when '2' %}
      {% assign border_class = border_class | append: ' border-b-2' %}
    {% when '4' %}
      {% assign border_class = border_class | append: ' border-b-4' %}
    {% when '8' %}
      {% assign border_class = border_class | append: ' border-b-8' %}
  {% endcase %}

  {% case section.settings.menu_border_color %}
    {% when 'pink' %}
      {% assign border_class = border_class | append: ' border-[#c42764]' %}
    {% when 'gray' %}
      {% assign border_class = border_class | append: ' border-gray-500' %}
    {% when 'black' %}
      {% assign border_class = border_class | append: ' border-black' %}
  {% endcase %}

  {% if section.settings.border_bottom == 'dashed' %}
    {% assign border_class = border_class | append: ' border-dashed' %}
  {% elsif section.settings.border_bottom == 'solid' %}
    {% assign border_class = border_class | append: ' border-solid' %}
  {% else %}
    {% assign border_class = border_class | append: ' border-none' %}
  {% endif %}
{% endif %}

<div
  id="header-container"
  class="
    w-full shadow-lg bg-white {{ border_class }}
    {% if section.settings.header_position == "fixed" %}
      fixed top-0 z-40
    {% endif %}
  "
>
  <div class="flex flex-row text-sm w-2/3 mx-auto justify-between py-4">
    {% content_for 'blocks' %}
    <script src="{{ 'menu-toggle.js' | asset_url }}" defer></script>
    <script src="{{ 'search.js' | asset_url }}" defer></script>
    <script src="{{ 'stickybits.min.js' | asset_url }}" defer></script>
  </div>
</div>

{% stylesheet %}
  #header-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    /* position: sticky;
    top: 0;
    z-index: 50; */
  }
  .border-dashed {
    border-style: dashed;
  }
  .border-solid {
    border-style: solid;
  }
  #header-container a {
    position: relative;
    text-decoration: none;
    color: var(--color-foreground);
  }
  #header-container a sup {
    position: absolute;
    left: 100%;
    overflow: hidden;
    max-width: var(--page-margin);
  }
  #header-container svg {
    width: 2rem;
  }
  #header-container .header__menu,
  #header-container .header__icons {
    display: flex;
    gap: 1rem;
  }
{% endstylesheet %}

{% if section.settings.header_position == 'sticky' %}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      stickybits('#header-container', { stickyBitStickyOffset: 0 });
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "t:general.header",
  "class": "header",
  "limit": 1,
  "settings": [
    {
      "type": "select",
      "id": "header_position",
      "label": "Header Position",
      "default": "none",
      "options": [
        {
          "value": "fixed",
          "label": "Fixed"
        },
        {
          "value": "sticky",
          "label": "Sticky"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "menu_border",
      "label": "Show Menu Border",
      "default": false
    },
    {
      "type": "select",
      "id": "border_bottom",
      "label": "t:settings.header.border_bottom.name",
      "default": "none",
      "options": [
        {
          "value": "none",
          "label": "t:settings.header.border_bottom.none"
        },
        {
          "value": "solid",
          "label": "t:settings.header.border_bottom.solid"
        },
        {
          "value": "dashed",
          "label": "t:settings.header.border_bottom.dashed"
        }
      ]
    },
    {
      "type": "select",
      "id": "menu_border_width",
      "label": "Menu Item Border Width",
      "options": [
        {
          "value": "0",
          "label": "0"
        },
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "4",
          "label": "4"
        },
        {
          "value": "8",
          "label": "8"
        }
      ],
      "default": "0"
    },
    {
      "type": "select",
      "id": "menu_border_color",
      "label": "Menu Item Border Color",
      "options": [
        {
          "value": "pink",
          "label": "pink"
        },
        {
          "value": "gray",
          "label": "Gray"
        },
        {
          "value": "black",
          "label": "Black"
        }
      ]
    }
  ],
  "blocks": [{ "type": "@theme" }, { "type": "@app" }]
}
{% endschema %}
