<div class="filters space-y-4">
  <!-- Filter Selected Tags (Active Filters) -->
  {% if collection.current_tags.size > 0 or collection.current_filters.size > 0 %}
    <div class="mb-4 flex flex-wrap gap-2">
      {% for tag in collection.current_tags %}
        <span class="px-3 py-1 rounded bg-gray-200 text-sm flex items-center gap-2">
          {{ tag }}
          <a
            href="{{ collection.url | remove: '?constraint=' | append: collection.current_tags | split: tag | join: '' }}"
            class="text-red-500 hover:underline"
            >×</a
          >
        </span>
      {% endfor %}
      <a href="{{ collection.url }}" class="text-sm text-indigo-600 hover:underline ml-2">Remove all</a>
    </div>
  {% endif %}

  <!-- Filter by Price Range -->

  <div x-data="priceFilter()" class="relative flex flex-col w-full bg-gray-100 px-4 py-2 rounded shadow-sm">
    <button
      class="flex w-full justify-between items-center gap-1 rounded"
    >
      <span class="font-semibold">Price</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-4 w-4 transform transition-transform duration-200"
        :class="{ 'rotate-180': open }"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
              d="M19 9l-7 7-7-7" />
      </svg>
    </button>
    <div class="hidden items-center gap-x-3" id="PriceForm">
      <label class="block text-sm mb-2 font-semibold">from</label>
      <input
        type="number"
        x-model="minPrice"
        placeholder="from"
        class="w-full mb-3 px-3 py-2 border rounded"
        min="0"
        @keyup.enter="applyFilter"
      >

      <label class="block text-sm mb-2 font-semibold">to</label>
      <input
        type="number"
        x-model="maxPrice"
        placeholder="to"
        class="w-full mb-3 px-3 py-2 border rounded"
        min="0"
        @keyup.enter="applyFilter"
      >
    </div>
  </div>

  <!-- Filter by Options -->
  {% for option in collection.all_types_options %}
    <div x-data="{ open: false }" class="relative">
      <button id="priceToggleBtn" class="flex justify-between w-full px-4 py-2 bg-gray-100 rounded shadow-sm">
        {{ option.name }}
        <svg
          id="priceArrow"
          xmlns="http://www.w3.org/2000/svg"
          class="h-4 w-4 transform transition-transform duration-200"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path d="M19 9l-7 7-7-7"/>
        </svg>
      </button>
      <ul
        x-show="open"
        @click.away="open = false"
        class="absolute z-10 bg-white shadow rounded mt-1 w-full max-h-60 overflow-auto"
      >
        {% for value in option.values %}
          <li>
            <a
              href="{{ collection.url }}?options[{{ option.name | handle }}]={{ value | handle }}"
              class="block px-4 py-2 hover:bg-indigo-100"
            >
              {{ value }}
            </a>
          </li>
        {% endfor %}
      </ul>
    </div>
  {% endfor %}
</div>

<script>
  const toggleBtn = document.getElementById('priceToggleBtn');
  const priceForm = document.getElementById('PriceForm');
  const arrowIcon = document.getElementById('priceArrow');

  toggleBtn.addEventListener('click', () => {
    // قلب السهم
    arrowIcon.classList.toggle('rotate-180');

    // أظهر أو أخفي الفورم
    if (priceForm.classList.contains('hidden')) {
      priceForm.classList.remove('hidden');
      priceForm.classList.add('flex');
    } else {
      priceForm.classList.remove('flex');
      priceForm.classList.add('hidden');
    }
  });
</script>

<script>
  function priceFilter() {
    return {
      minPrice: '',
      maxPrice: '',
      applyFilter() {
        let url = new URL(window.location.href);

        if (this.minPrice) {
          url.searchParams.set('filter.v.price.gte', this.minPrice);
        } else {
          url.searchParams.delete('filter.v.price.gte');
        }

        if (this.maxPrice) {
          url.searchParams.set('filter.v.price.lte', this.maxPrice);
        } else {
          url.searchParams.delete('filter.v.price.lte');
        }

        window.location.href = url.toString();
      },
    };
  }
</script>
